<?xml version="1.0" ?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<name>App Engine Base</name>
	<description>Contains basic reusable Google App Engine Code as a starting point for any project.</description>

	<groupId>com.dereekb.gae</groupId>
	<artifactId>gae-core</artifactId>
	<version>2.1.0</version>

	<properties>
		<packaging.type>war</packaging.type>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<appengine.target.version>1.9.77</appengine.target.version>
		<appengine-cloud.target.version>1.101.0</appengine-cloud.target.version>
		<google-cloud.target.version>2.0.0</google-cloud.target.version>
		<firebase.target.version>6.11.0</firebase.target.version>
		<spring.target.version>5.1.8.RELEASE</spring.target.version>
		<spring-security.target.version>5.1.5.RELEASE</spring-security.target.version>
		<junit.target.version>5.4.0</junit.target.version>
		<jackson.target.version>2.9.9</jackson.target.version>
		<opencensus.target.version>0.24.0</opencensus.target.version>
	</properties>

	<!-- Declared WAR by default (above) for appengine:run. JAR values are published. -->
	<packaging>${packaging.type}</packaging>

	<profiles>
		<!-- Deploy Profile turns this into a JAR package. -->
		<profile>
			<id>deploy</id>
			<properties>
				<packaging.type>jar</packaging.type>
			</properties>
		</profile>
	</profiles>

	<dependencies>

		<!-- Compile/runtime dependencies -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.1.0</version>
		</dependency>
		<dependency>
			<groupId>jstl</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
		</dependency>

		<!-- Google App Engine -->
		<dependency>
			<groupId>com.google.cloud</groupId>
			<artifactId>google-cloud-datastore</artifactId>
			<version>${appengine-cloud.target.version}</version>
		</dependency>

		<dependency>
			<groupId>com.google.cloud</groupId>
			<artifactId>google-cloud-storage</artifactId>
			<version>${appengine-cloud.target.version}</version>
		</dependency>

		<dependency>
			<groupId>com.google.appengine</groupId>
			<artifactId>appengine-api-1.0-sdk</artifactId>
			<version>${appengine.target.version}</version>
		</dependency>

		<dependency>
			<!-- TODO: Remove this later as we no longer need it. -->
			<groupId>com.google.appengine.tools</groupId>
			<artifactId>appengine-gcs-client</artifactId>
			<version>0.8</version>
		</dependency>

		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>23.0</version>
		</dependency>

		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
			<version>2.8.0</version>
		</dependency>

		<dependency>
			<groupId>com.google.http-client</groupId>
			<artifactId>google-http-client</artifactId>
			<version>1.33.0</version>
		</dependency>

		<!-- Tokens -->
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt</artifactId>
			<version>0.9.0</version>
		</dependency>

		<!-- Scribe -->
		<dependency>
			<groupId>com.github.scribejava</groupId>
			<artifactId>scribejava-apis</artifactId>
			<version>6.6.3</version>
		</dependency>

		<!-- Objectify -->
		<dependency>
			<groupId>com.googlecode.objectify</groupId>
			<artifactId>objectify</artifactId>
			<version>6.0.4</version>
		</dependency>

		<!-- Jackson -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
			<version>${jackson.target.version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>${jackson.target.version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-annotations</artifactId>
			<version>${jackson.target.version}</version>
		</dependency>

		<!-- Spring -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${spring.target.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring.target.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${spring.target.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-web</artifactId>
			<version>${spring-security.target.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
			<version>${spring-security.target.version}</version>
		</dependency>

		<!-- Other -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-simple</artifactId>
			<version>1.7.12</version>
		</dependency>

		<dependency>
			<!-- Used for Spring -->
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<version>4.5.9</version>
		</dependency>

		<!-- Firebase -->
		<!-- Used for push notifications -->
		<dependency>
			<groupId>com.google.firebase</groupId>
			<artifactId>firebase-admin</artifactId>
			<version>${firebase.target.version}</version>
		</dependency>

		<!-- Dependency Override Fixes -->
		<!-- Various imports that are used for resolving mismatching versions. -->
		<dependency>
			<groupId>com.google.api-client</groupId>
			<artifactId>google-api-client</artifactId>
			<version>1.30.5</version>
		</dependency>
		
		<dependency>
		    <groupId>com.google.api-client</groupId>
		    <artifactId>google-api-client-appengine</artifactId>
		    <version>1.30.5</version>
		</dependency>

		<!-- Fixes for imports from Google Cloud Storage and Firebase -->
		<dependency>
			<groupId>io.opencensus</groupId>
			<artifactId>opencensus-api</artifactId>
			<version>${opencensus.target.version}</version>
		</dependency>
		<dependency>
			<groupId>io.opencensus</groupId>
			<artifactId>opencensus-contrib-http-util</artifactId>
			<version>${opencensus.target.version}</version>
		</dependency>
		<dependency>
			<groupId>io.opencensus</groupId>
			<artifactId>opencensus-contrib-grpc-metrics</artifactId>
			<version>${opencensus.target.version}</version>
		</dependency>
		<dependency>
			<groupId>io.opencensus</groupId>
			<artifactId>opencensus-contrib-grpc-util</artifactId>
			<version>${opencensus.target.version}</version>
		</dependency>

		<!-- Jersey -->
		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-core</artifactId>
			<version>1.19.4</version>
		</dependency>

		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-client</artifactId>
			<version>1.19.4</version>
		</dependency>

		<dependency>
			<groupId>com.sun.jersey.contribs</groupId>
			<artifactId>jersey-multipart</artifactId>
			<version>1.19.4</version>
		</dependency>

		<!-- Validation -->
		<dependency>
			<groupId>org.hibernate.validator</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>6.0.17.Final</version>
		</dependency>

		<dependency>
			<groupId>org.glassfish</groupId>
			<artifactId>javax.el</artifactId>
			<version>3.0.1-b08</version>
		</dependency>

		<dependency>
			<groupId>com.googlecode.libphonenumber</groupId>
			<artifactId>libphonenumber</artifactId>
			<version>8.8.6</version>
		</dependency>

		<!-- Geospacial -->
		<dependency>
			<groupId>org.apache.lucene</groupId>
			<artifactId>lucene-spatial</artifactId>
			<version>8.2.0</version>
		</dependency>

		<!-- Test Dependencies -->
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<version>${junit.target.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<version>${junit.target.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>2.12.0</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${spring.target.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
			<version>${spring-security.target.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.google.appengine</groupId>
			<artifactId>appengine-testing</artifactId>
			<version>${appengine.target.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.google.appengine</groupId>
			<artifactId>appengine-api-labs</artifactId>
			<version>${appengine.target.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.google.appengine</groupId>
			<artifactId>appengine-api-stubs</artifactId>
			<version>${appengine.target.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.google.appengine</groupId>
			<artifactId>appengine-tools-sdk</artifactId>
			<version>${appengine.target.version}</version>
			<scope>test</scope>
		</dependency>

		<!-- Google Cloud Storage Testing -->
		<dependency>
			<groupId>com.google.cloud</groupId>
			<artifactId>google-cloud-nio</artifactId>
			<version>0.119.0-alpha</version>
			<scope>test</scope>
		</dependency>

		<!-- Extras -->
		<dependency>
			<groupId>com.jamesmurty.utils</groupId>
			<artifactId>java-xmlbuilder</artifactId>
			<version>1.2</version>
			<scope>test</scope>
		</dependency>

	</dependencies>

	<build>

		<!-- Resources to add to test-jar -->
		<testResources>
			<testResource>
				<directory>${basedir}/src/test/webapp</directory>
				<includes>
					<include>*</include>
				</includes>
			</testResource>
		</testResources>

		<plugins>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.5.1</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
					<!-- Exclude all deprecated folders. -->
					<excludes>
						<exclude>**/deprecated/**</exclude>
					</excludes>
					<testExcludes>
						<testExclude>**/deprecated/**</testExclude>
					</testExcludes>
				</configuration>
			</plugin>

			<!-- Maven Build Plugins -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>3.0.1</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
					<!-- Exclude all deprecated folders. -->
					<excludes>
						<exclude>**/deprecated/**</exclude>
					</excludes>
					<testExcludes>
						<testExclude>**/deprecated/**</testExclude>
					</testExcludes>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.6</version>
				<configuration>
					<!-- Exclude all deprecated folders. -->
					<excludes>
						<exclude>**/deprecated/*</exclude>
					</excludes>
				</configuration>
				<executions>
					<execution>
						<id>make-jar</id>
						<phase>compile</phase>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
					<execution>
						<goals>
							<goal>test-jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.10.4</version>
				<configuration>
					<!-- Exclude Deprecated Packages -->
					<excludePackageNames>*.deprecated.*</excludePackageNames>
				</configuration>
				<executions>
					<execution>
						<id>attach-javadocs</id>
						<goals>
							<goal>jar</goal>
						</goals>
						<configuration> <!-- add this to disable checking -->
							<additionalparam>-Xdoclint:none</additionalparam>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Surefire Tests -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.22.1</version>
				<configuration>
					<parallel>methods</parallel>
					<useUnlimitedThreads>true</useUnlimitedThreads>
				</configuration>
			</plugin>

			<!-- Clean/Delete the generated WEB-INF folder after install. -->
			<plugin>
				<artifactId>maven-clean-plugin</artifactId>
				<version>2.6.1</version>
				<executions>
					<execution>
						<id>auto-clean</id>
						<phase>install</phase>
						<goals>
							<goal>clean</goal>
						</goals>
						<configuration>
							<excludeDefaultDirectories>
								true
							</excludeDefaultDirectories>
							<filesets>
								<fileset>
									<directory>WEB-INF</directory>
								</fileset>
							</filesets>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Devserver -->

			<!-- War Generation (Only For Development) -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<version>7</version>
					<webXml>${basedir}/src/main/webapp/WEB-INF/web.xml</webXml>
					<archiveClasses>true</archiveClasses>
					<archive>
						<addMavenDescriptor>false</addMavenDescriptor>
					</archive>
					<webResources>
						<!-- Copy Resources from webapp/WEB-INF to the created WAR file. -->
						<resource>
							<directory>${basedir}/src/main/webapp/WEB-INF</directory>
							<filtering>false</filtering>
							<targetPath>WEB-INF</targetPath>
						</resource>
						<!-- Include Test Classes -->
						<resource>
							<directory>${basedir}/target/test-classes</directory>
							<targetPath>WEB-INF/classes</targetPath>
						</resource>
					</webResources>
				</configuration>
			</plugin>

			<!-- Maven Appengine Plugin -->
			<plugin>
				<groupId>com.google.cloud.tools</groupId>
				<artifactId>appengine-maven-plugin</artifactId>
				<version>${google-cloud.target.version}</version>
				<configuration>
					<projectId>gae-test</projectId>
					<version>1</version>
					<!-- Development Server -->
					<enableJarClasses>false</enableJarClasses>
					<host>0.0.0.0</host>
					<port>8080</port>
					<jvmFlags>
						<jvmFlag>-Xmx1024m</jvmFlag>
						<jvmFlag>-Xms256m</jvmFlag>
						<jvmFlag>-Xdebug</jvmFlag>
						<jvmFlag>-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=8888</jvmFlag>
					</jvmFlags>
				</configuration>
			</plugin>

			<!-- Local Install -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-install-plugin</artifactId>
				<!-- Since the pom is declared as a WAR, the JAR is not saved locally 
					to the default. -->
				<executions>
					<execution>
						<phase>install</phase>
						<goals>
							<goal>install-file</goal>
						</goals>
						<configuration>
							<packaging>jar</packaging>
							<artifactId>${project.artifactId}</artifactId>
							<groupId>${project.groupId}</groupId>
							<version>${project.version}</version>
							<file>
								${project.build.directory}/${project.artifactId}-${project.version}.jar
							</file>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Versioning -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>versions-maven-plugin</artifactId>
				<version>2.7</version>
			</plugin>

			<!-- Artifactory Deploy -->
			<plugin>
				<groupId>org.jfrog.buildinfo</groupId>
				<artifactId>artifactory-maven-plugin</artifactId>
				<version>2.6.1</version>
				<inherited>false</inherited>
				<executions>
					<execution>
						<id>build-info</id>
						<goals>
							<goal>publish</goal>
						</goals>
						<configuration>
							<artifactory>
								<includeEnvVars>true</includeEnvVars>
								<envVarsExcludePatterns>*MAVEN_CREDS*,*MAVEN_CREDS_USR*,*MAVEN_CREDS_PSW*</envVarsExcludePatterns>
								<timeoutSec>20</timeoutSec>
							</artifactory>
							<publisher>
								<contextUrl>{{ARTIFACTORY_CONTEXT_URL|"https://dev.dereekb.com:10000/artifactory"}}</contextUrl>
								<username>{{MAVEN_CREDS_USR}}</username>
								<password>{{MAVEN_CREDS_PSW}}</password>
								<repoKey>libs-release-local</repoKey>
								<snapshotRepoKey>libs-snapshot-local</snapshotRepoKey>
								<publishBuildInfo>true</publishBuildInfo>
								<!-- Include the JAR files. -->
								<includePatterns>*.jar,*.pom</includePatterns>
								<!-- Don't include WAR for deployment. -->
								<excludePatterns>*.war</excludePatterns>
							</publisher>
							<buildInfo>
								<buildName>appengine</buildName>
								<buildNumber>${buildnumber}</buildNumber>
								<buildRetentionCount>10</buildRetentionCount>
							</buildInfo>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
