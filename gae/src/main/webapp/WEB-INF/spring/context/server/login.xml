<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:security="http://www.springframework.org/schema/security"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- Login Service -->
	<bean id="loginTokenSecret" class="java.lang.String">
		<constructor-arg index="0"
			value="3zRepP7IfiCCDa7EE5aCradtF94giUGizNr9yb8E/QU=" />
	</bean>

	<bean id="loginTokenEncoderDecoder"
		class="com.dereekb.gae.server.auth.security.token.model.impl.LoginTokenEncoderDecoderImpl">
		<constructor-arg index="0" ref="loginTokenSecret" />
	</bean>

	<bean id="loginTokenService"
		class="com.dereekb.gae.server.auth.security.token.model.impl.LoginTokenServiceImpl">
		<constructor-arg index="0" ref="loginTokenBuilder" />
		<constructor-arg index="1" ref="loginTokenEncoderDecoder" />
	</bean>

	<bean id="loginTokenBuilder"
		class="com.dereekb.gae.server.auth.security.token.model.impl.LoginTokenBuilderImpl">
		<constructor-arg index="0" ref="loginRegistry" />
		<constructor-arg index="1" ref="loginOwnershipRolesReader" />
	</bean>

	<!-- Login Pointer Service -->
	<bean id="loginPointerService"
		class="com.dereekb.gae.server.auth.security.login.impl.LoginPointerServiceImpl">
		<constructor-arg index="0" ref="loginPointerRegistry" />
		<constructor-arg index="1"
			ref="loginPointerScheduleCreateReview" />
	</bean>

	<!-- Password Service -->
	<bean id="passwordLoginService"
		class="com.dereekb.gae.server.auth.security.login.password.impl.PasswordLoginServiceImpl">
		<constructor-arg index="0" ref="passwordEncoder" />
		<constructor-arg index="1" ref="loginPointerService" />
		<constructor-arg index="2" ref="loginRegisterService" />
	</bean>

	<bean id="passwordEncoder"
		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
	</bean>

	<!-- OAuth Services -->
	<bean id="oAuthServiceManager"
		class="com.dereekb.gae.server.auth.security.login.oauth.impl.manager.OAuthServiceManagerImpl">
		<constructor-arg index="0" ref="oAuthLoginService" />
		<constructor-arg index="1">
			<map key-type="com.dereekb.gae.server.auth.model.pointer.LoginPointerType">
			</map>
		</constructor-arg>
	</bean>

	<bean id="oAuthLoginService"
		class="com.dereekb.gae.server.auth.security.login.oauth.impl.service.OAuthLoginServiceImpl">
		<constructor-arg index="0" ref="loginPointerService" />
	</bean>

	<!-- KeyLogin Services -->
	<bean id="keyLoginStatusServiceManager"
		class="com.dereekb.gae.server.auth.security.login.key.impl.KeyLoginStatusServiceManagerImpl">
		<constructor-arg index="0" ref="loginPointerRegistry" />
	</bean>

	<bean id="keyLoginAuthenticationService"
		class="com.dereekb.gae.server.auth.security.login.key.impl.KeyLoginAuthenticationServiceImpl">
		<constructor-arg index="0" ref="loginKeyRegistry" />
		<constructor-arg index="1" ref="loginPointerRegistry" />
	</bean>

	<!-- Register Service -->
	<bean id="loginRegisterService"
		class="com.dereekb.gae.server.auth.security.login.impl.LoginRegisterServiceImpl">
		<constructor-arg index="0" ref="newLoginGenerator" />
		<constructor-arg index="1" ref="loginRegistry" />
		<constructor-arg index="2" ref="loginPointerRegistry" />
	</bean>

	<bean id="newLoginGenerator"
		class="com.dereekb.gae.server.auth.security.login.impl.NewLoginGeneratorImpl">
		<constructor-arg index="0" ref="newLoginOwnershipRolesSaver" />
		<constructor-arg index="1" ref="loginScheduleCreateReview" />
	</bean>

	<bean id="newLoginOwnershipRolesSaver"
		class="com.dereekb.gae.server.auth.model.login.misc.ownership.task.NewLoginOwnershipRolesSaver">
		<constructor-arg index="0" ref="loginRegistry" />
		<constructor-arg index="1" ref="loginOwnershipRolesReader" />
	</bean>

	<bean id="loginOwnershipRolesReader"
		class="com.dereekb.gae.server.auth.model.login.misc.ownership.LoginOwnershipRolesReader">
	</bean>

	<!-- Refresh Token Service -->
	<bean id="refreshTokenService"
		class="com.dereekb.gae.server.auth.security.token.refresh.impl.RefreshTokenServiceImpl">
		<constructor-arg index="0" ref="loginRegistry" />
		<constructor-arg index="1" ref="loginPointerRegistry" />
	</bean>

	<bean id="refreshTokenEncoderDecoder"
		class="com.dereekb.gae.server.auth.security.token.refresh.impl.RefreshTokenEncoderDecoder">
		<constructor-arg index="0" ref="loginTokenSecret" />
	</bean>

	<!-- Login Models Service -->
	<bean id="loginTokenModelContextService"
		class="com.dereekb.gae.server.auth.security.model.context.service.impl.LoginTokenModelContextServiceImpl">
		<constructor-arg index="0"
			ref="loginTokenModelContextServiceEntries" />
	</bean>

	<alias name="loginTokenModelContextService" alias="anonymousModelRoleSetContextService" />

	<bean id="loginTokenModelContextSetDencoder"
		class="com.dereekb.gae.server.auth.security.model.context.encoded.impl.LoginTokenModelContextSetEncoderDecoderImpl">
		<constructor-arg index="0"
			ref="loginTokenModelContextServiceDencoderEntries" />
	</bean>

	<bean id="securityContextAnonymousModelRoleSetContextService"
		class="com.dereekb.gae.server.auth.security.model.roles.loader.impl.SecurityContextAnonymousModelRoleSetContextService">
	</bean>

	<util:list id="loginTokenModelContextServiceEntries">
		<ref bean="loginSecurityContextServiceEntry" />
		<ref bean="loginKeySecurityContextServiceEntry" />
		<ref bean="loginPointerSecurityContextServiceEntry" />
	</util:list>

	<alias name="loginTokenModelContextServiceEntries" alias="loginTokenModelContextServiceDencoderEntries" />

</beans>