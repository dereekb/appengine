<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE appengine>
<appengine-web-app xmlns="http://appengine.google.com/ns/1.0">

	<application>gae-test-server</application>
	<version>v1</version>
	<module>login</module>

	<runtime>java8</runtime>
	
	<vm>false</vm>
	<instance-class>F1</instance-class>

	<automatic-scaling>
		<min-idle-instances>automatic</min-idle-instances>
		<!-- ‘automatic’ is the default value. -->
		<max-idle-instances>automatic</max-idle-instances>
		<!-- ‘automatic’ is the default value. -->
		<min-pending-latency>200ms</min-pending-latency>
		<max-pending-latency>8000ms</max-pending-latency>
		<max-concurrent-requests>50</max-concurrent-requests>
	</automatic-scaling>

	<public-root>/static</public-root>

	<static-files>
		<include path="**/static/**" />
	</static-files>

	<!-- Allows App Engine to send multiple requests to one instance in parallel. -->
	<threadsafe>true</threadsafe>

	<!-- HTTP Sessions are disabled by default. To enable HTTP sessions specify: 
		It's possible to reduce request latency by configuring your application to 
		asynchronously write HTTP session data to the datastore: <async-session-persistence 
		enabled="true" /> With this feature enabled, there is a very small chance 
		your app will see stale session data. For details, see http://code.google.com/appengine/docs/java/config/appconfig.htm#Enabling_Sessions -->
	<sessions-enabled>false</sessions-enabled>

	<!-- <async-session-persistence enabled="true" /> -->

	<ssl-enabled>true</ssl-enabled>

	<!-- Configure java.util.logging -->
	<system-properties>
		<property name="java.util.logging.config.file" value="WEB-INF/logging.properties" />
	</system-properties>

</appengine-web-app>
